{
  "address": "0x580D232675F9010c3C2eA39871346780EE618dAd",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "igoAndNoLossLotteries",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nllAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setNoLossLotteries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x21f6da6cafa4178a195eb3c58aa9242a3d778ed96b001051ba1e14720fca36ff",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x580D232675F9010c3C2eA39871346780EE618dAd",
    "transactionIndex": 0,
    "gasUsed": "963804",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000002000000000000000000020000000000000000000000000008000000000000000000000010000000000000000",
    "blockHash": "0x5eda91347a990dfecc27346cc8b1c7182184e82ddcc9550cb1d1e1073062a78a",
    "transactionHash": "0x21f6da6cafa4178a195eb3c58aa9242a3d778ed96b001051ba1e14720fca36ff",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10676917,
        "transactionHash": "0x21f6da6cafa4178a195eb3c58aa9242a3d778ed96b001051ba1e14720fca36ff",
        "address": "0x580D232675F9010c3C2eA39871346780EE618dAd",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5eda91347a990dfecc27346cc8b1c7182184e82ddcc9550cb1d1e1073062a78a"
      }
    ],
    "blockNumber": 10676917,
    "cumulativeGasUsed": "963804",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c673e363a950d162cc4e095a7d22b92a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"igoAndNoLossLotteries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nllAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setNoLossLotteries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden;\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"ERC677 transfer token to a contract address with additional data if the recipient is a contract.\",\"params\":{\"_data\":\"The extra data to be passed to the receiving contract.\",\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NLLToken.sol\":\"NLLToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NLLToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.2;\\n\\nimport \\\"./utils/access/Ownable.sol\\\";\\nimport \\\"./utils/token/ERC20/MinimalERC20.sol\\\";\\nimport \\\"./utils/token/ERC677/ERC677Receiver.sol\\\";\\n\\ncontract NLLToken is Ownable, MinimalERC20 {\\n    mapping(address => bool) public igoAndNoLossLotteries;\\n    uint256 maxSupply = 1000000 * 1e18;\\n\\n    modifier onlyNoLossLotteries() {\\n      require(igoAndNoLossLotteries[_msgSender()] == true);\\n      _;\\n    }\\n\\n    constructor() MinimalERC20(\\\"NLL Token\\\", \\\"NLL\\\") {}\\n\\n    function setNoLossLotteries(address nllAddress, bool status) public onlyOwner {\\n        igoAndNoLossLotteries[nllAddress] = status;\\n    }\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n      require(amount <= (maxSupply - totalSupply()), \\\"NLL: Mint exceeds maximum amount\\\");\\n      _mint(to, amount);\\n    }\\n\\n    function transfer(address to, uint256 amount) public onlyNoLossLotteries {\\n      _transfer(_msgSender(), to, amount);\\n    }\\n\\n    // function burnFrom(address from, uint256 amount) public onlyNoLossLotteries {\\n    //   _burn(from, amount);\\n    // }\\n\\n    function burn(uint256 amount) public {\\n      _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n    * @dev ERC677 transfer token to a contract address with additional data if the recipient is a contract.\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    * @param _data The extra data to be passed to the receiving contract.\\n    */\\n    function transferAndCall(address _to, uint _value, bytes memory _data) public returns (bool success) {\\n      require(_msgSender() != address(0), \\\"ERC677: can't receive tokens from the zero address\\\");\\n      require(_to != address(0), \\\"ERC677: can't send to zero address\\\");\\n      require(_to != address(this), \\\"ERC677: can't send tokens to the token address\\\");\\n      require(igoAndNoLossLotteries[_to] == true, \\\"Transfers are only allowed in the Daily, Weekly, Monthly No Loss Lotteries.\\\");\\n\\n      _transfer(_msgSender(), _to, _value);\\n      emit Transfer(_msgSender(), _to, _value);\\n\\n      if (isContract(_to)) {\\n        contractFallback(_to, _value, _data);\\n      }\\n      return true;\\n    }\\n\\n    /**\\n    * @dev ERC677 function that emits _data to contract.\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    * @param _data The extra data to be passed to the receiving contract.\\n    */\\n    function contractFallback(address _to, uint _value, bytes memory _data) private {\\n      ERC677Receiver receiver = ERC677Receiver(_to);\\n      receiver.onTokenTransfer(msg.sender, _value, _data);\\n    }\\n\\n    /**\\n    * @dev Helper function that identifies if receiving address is a contract.\\n    * @param _addr The address to transfer to.\\n    * @return hasCode The bool that checks if address is an EOA or a Smart Contract. \\n    */\\n    function isContract(address _addr) private view returns (bool hasCode) {\\n      uint length;\\n      assembly { length := extcodesize(_addr) }\\n      return length > 0;\\n    }\\n\\n}\\n\\n\\n\\n\\n// pragma solidity ^0.8.4;\\n\\n// // \\u2588\\u2588\\u2588    \\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588      \\u2588\\u2588       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2588\\u2588       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588    \\u2588\\u2588      \\u2588\\u2588 \\u2588\\u2588\\u2588    \\u2588\\u2588 \\u2588\\u2588      \\u2588\\u2588      \\u2588\\u2588  \\n// // \\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588 \\u2588\\u2588    \\u2588\\u2588     \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588 \\u2588\\u2588      \\u2588\\u2588          \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588    \\u2588\\u2588       \\u2588\\u2588    \\u2588\\u2588      \\u2588\\u2588   \\u2588\\u2588  \\u2588\\u2588  \\u2588\\u2588      \\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588 \\u2588\\u2588      \\u2588\\u2588       \\u2588\\u2588 \\n// // \\u2588\\u2588 \\u2588\\u2588  \\u2588\\u2588 \\u2588\\u2588    \\u2588\\u2588     \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588    \\u2588\\u2588       \\u2588\\u2588    \\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588    \\u2588\\u2588\\u2588\\u2588       \\u2588\\u2588  \\u2588\\u2588 \\u2588\\u2588  \\u2588\\u2588 \\u2588\\u2588      \\u2588\\u2588       \\u2588\\u2588 \\n// // \\u2588\\u2588  \\u2588\\u2588 \\u2588\\u2588 \\u2588\\u2588    \\u2588\\u2588     \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588      \\u2588\\u2588      \\u2588\\u2588     \\u2588\\u2588      \\u2588\\u2588    \\u2588\\u2588    \\u2588\\u2588       \\u2588\\u2588    \\u2588\\u2588      \\u2588\\u2588   \\u2588\\u2588    \\u2588\\u2588        \\u2588\\u2588  \\u2588\\u2588  \\u2588\\u2588 \\u2588\\u2588 \\u2588\\u2588      \\u2588\\u2588       \\u2588\\u2588 \\n// // \\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588      \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2588\\u2588       \\u2588\\u2588    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588   \\u2588\\u2588    \\u2588\\u2588         \\u2588\\u2588 \\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588 \\u2588\\u2588  \\n\\n// // Usefull Links:\\n// // Landing - https://btclottery.io\\n// // IGO - https://igo.btclottery.io\\n// // DEMO - https://demo.btclottery.io\\n// // Github - https://github.com/BTCLottery\\n// // Youtube - https://www.youtube.com/channel/UCFIqdTB47jtHiM0F0bZc_0Q\\n// // Whitepaper - https://www.btclottery.io/Bitcoin-Lottery-Whitepaper.pdf\\n// // Twitter - https://twitter.com/btclottery_io\\n// // Discord - https://discord.com/channels/806829532081815552/806829532081815555\\n// // Telegram - https://t.me/btclottery_io\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n// import \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\n// import \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n// import \\\"./utils/token/ERC677/ERC677Receiver.sol\\\";\\n\\n// contract NLLToken is ERC20, ERC20Burnable, Ownable {\\n//     uint256 public constant minimumMintInterval = 365 days;\\n//     uint256 public constant mintCap = 100; // 1%\\n//     uint256 public nextMint; // Next Timestamp\\n\\n//     constructor() ERC20(\\\"No Loss Lotteries\\\", \\\"NLL\\\") {\\n//         _mint(msg.sender, 1000000 * 10 ** decimals());\\n//     }\\n\\n//     /**\\n//      * @dev Mints new tokens. Can only be executed every `minimumMintInterval`, by the owner, and cannot exceed `mintCap / 10000` fraction of the current total supply.\\n//      * @param to The address to mint the new tokens to.\\n//      * @param amount The quantity of tokens to mint.\\n//      */\\n//     function mint(address to, uint256 amount) public onlyOwner {\\n//         require(amount <= (totalSupply() * mintCap) / 10000, \\\"NLL: Mint exceeds maximum amount\\\");\\n//         require(block.timestamp >= nextMint, \\\"NLL: Cannot mint yet\\\");\\n//         nextMint = block.timestamp + minimumMintInterval;\\n//         _mint(to, amount);\\n//     }\\n\\n//     /**\\n//     * @dev ERC677 transfer token to a contract address with additional data if the recipient is a contract.\\n//     * @param _to The address to transfer to.\\n//     * @param _value The amount to be transferred.\\n//     * @param _data The extra data to be passed to the receiving contract.\\n//     */\\n//     function transferAndCall(address _to, uint _value, bytes memory _data) public returns (bool success) {\\n//       require(_msgSender() != address(0), \\\"ERC677: can't receive tokens from the zero address\\\");\\n//       require(_to != address(0), \\\"ERC677: can't send to zero address\\\");\\n//       require(_to != address(this), \\\"ERC677: can't send tokens to the token address\\\");\\n\\n//       _transfer(_msgSender(), _to, _value);\\n//       emit Transfer(_msgSender(), _to, _value);\\n\\n//       if (isContract(_to)) {\\n//         contractFallback(_to, _value, _data);\\n//       }\\n//       return true;\\n//     }\\n\\n//     /**\\n//     * @dev ERC677 function that emits _data to contract.\\n//     * @param _to The address to transfer to.\\n//     * @param _value The amount to be transferred.\\n//     * @param _data The extra data to be passed to the receiving contract.\\n//     */\\n//     function contractFallback(address _to, uint _value, bytes memory _data) private {\\n//       ERC677Receiver receiver = ERC677Receiver(_to);\\n//       receiver.onTokenTransfer(msg.sender, _value, _data);\\n//     }\\n\\n//     /**\\n//     * @dev Helper function that identifies if receiving address is a contract.\\n//     * @param _addr The address to transfer to.\\n//     * @return hasCode The bool that checks if address is an EOA or a Smart Contract. \\n//     */\\n//     function isContract(address _addr) private view returns (bool hasCode) {\\n//       uint length;\\n//       assembly { length := extcodesize(_addr) }\\n//       return length > 0;\\n//     }\\n//     // The following functions are overrides required by Solidity.\\n\\n//     function _afterTokenTransfer(address from, address to, uint256 amount)\\n//         internal\\n//         override(ERC20)\\n//     {\\n//         super._afterTokenTransfer(from, to, amount);\\n//     }\\n\\n//     function _mint(address to, uint256 amount)\\n//         internal\\n//         override(ERC20)\\n//     {\\n//         super._mint(to, amount);\\n//     }\\n\\n//     function _burn(address account, uint256 amount)\\n//         internal\\n//         override(ERC20)\\n//     {\\n//         super._burn(account, amount);\\n//     }\\n// }\",\"keccak256\":\"0x14842b5817abd2d849d2902f64f7f82b974d3d65f8205bf293f93d30a224f902\",\"license\":\"MIT\"},\"contracts/utils/GSN/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0xb53122e1b41825143486e6e0a288593a60bb924cfdc8e15309c9b86095becb7f\",\"license\":\"MIT\"},\"contracts/utils/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\",\"keccak256\":\"0x810ab49e924b07654f85fe5527581c48b7d7102fe75e984365fc8a651bb9d47e\",\"license\":\"MIT\"},\"contracts/utils/token/ERC20/MinimalERC20.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./MinimalIERC20.sol\\\";\\nimport \\\"./extensions/MinimalIERC20Metadata.sol\\\";\\nimport \\\"../../GSN/Context.sol\\\";\\n\\ncontract MinimalERC20 is Context, MinimalIERC20, MinimalIERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\",\"keccak256\":\"0x9bf332bd2c9e2ac339fa8353074238057530dc5d5c89ba49c7243a76819a589b\",\"license\":\"MIT\"},\"contracts/utils/token/ERC20/MinimalIERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface MinimalIERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Mints tokens in existence.\\n     */\\n    // function mint(address to, uint256 amount) external;\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\",\"keccak256\":\"0x706baa6311055d81233c8da8aa94f658a2b9ae83182c2a71c6652ae0e828d2fd\",\"license\":\"MIT\"},\"contracts/utils/token/ERC20/extensions/MinimalIERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../MinimalIERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface MinimalIERC20Metadata is MinimalIERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x57236ea9a7471573c037cfd099cf6c9922a40fff1b28321f8927dd88ce01514c\",\"license\":\"MIT\"},\"contracts/utils/token/ERC677/ERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.9.0;\\n\\ninterface ERC677Receiver {\\n  function onTokenTransfer(address _sender, uint _value, bytes memory _data) external;\\n}\",\"keccak256\":\"0x635f8dae2f1080707851b69ca1c19c6b2b63be836539df2a9c34ae9d11f9947f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405269d3c21bcecceda10000006006553480156200001f57600080fd5b5060405180604001604052806009815260200168272626102a37b5b2b760b91b8152506040518060400160405280600381526020016213931360ea1b8152506200007862000072620000ac60201b60201c565b620000b0565b81516200008d90600390602085019062000100565b508051620000a390600490602084019062000100565b505050620001e3565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010e90620001a6565b90600052602060002090601f0160209004810192826200013257600085556200017d565b82601f106200014d57805160ff19168380011785556200017d565b828001600101855582156200017d579182015b828111156200017d57825182559160200191906001019062000160565b506200018b9291506200018f565b5090565b5b808211156200018b576000815560010162000190565b600181811c90821680620001bb57607f821691505b60208210811415620001dd57634e487b7160e01b600052602260045260246000fd5b50919050565b610eb280620001f36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063945fb71711610066578063945fb717146101e857806395d89b41146101fb578063a9059cbb14610203578063f2fde38b1461021657600080fd5b8063715018a6146101a25780638da5cb5b146101aa5780639304a0ab146101c557600080fd5b80634000aea0116100c85780634000aea01461012e57806340c10f191461015157806342966c681461016657806370a082311461017957600080fd5b806306fdde03146100ef57806318160ddd1461010d578063313ce5671461011f575b600080fd5b6100f7610229565b6040516101049190610d7e565b60405180910390f35b6002545b604051908152602001610104565b60405160128152602001610104565b61014161013c366004610c1d565b6102bb565b6040519015158152602001610104565b61016461015f366004610bf3565b6104f7565b005b610164610174366004610ce8565b61058e565b610111610187366004610b95565b6001600160a01b031660009081526001602052604090205490565b61016461059b565b6000546040516001600160a01b039091168152602001610104565b6101416101d3366004610b95565b60056020526000908152604090205460ff1681565b6101646101f6366004610bb7565b6105d1565b6100f7610626565b610164610211366004610bf3565b610635565b610164610224366004610b95565b610661565b60606003805461023890610df5565b80601f016020809104026020016040519081016040528092919081815260200182805461026490610df5565b80156102b15780601f10610286576101008083540402835291602001916102b1565b820191906000526020600020905b81548152906001019060200180831161029457829003601f168201915b5050505050905090565b60003361032a5760405162461bcd60e51b815260206004820152603260248201527f4552433637373a2063616e2774207265636569766520746f6b656e732066726f6044820152716d20746865207a65726f206164647265737360701b60648201526084015b60405180910390fd5b6001600160a01b03841661038b5760405162461bcd60e51b815260206004820152602260248201527f4552433637373a2063616e27742073656e6420746f207a65726f206164647265604482015261737360f01b6064820152608401610321565b6001600160a01b0384163014156103fb5760405162461bcd60e51b815260206004820152602e60248201527f4552433637373a2063616e27742073656e6420746f6b656e7320746f2074686560448201526d20746f6b656e206164647265737360901b6064820152608401610321565b6001600160a01b03841660009081526005602052604090205460ff1615156001146104a25760405162461bcd60e51b815260206004820152604b60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420696e20746860448201527f65204461696c792c205765656b6c792c204d6f6e74686c79204e6f204c6f737360648201526a102637ba3a32b934b2b99760a91b608482015260a401610321565b6104ad3385856106f9565b6040518381526001600160a01b038516903390600080516020610e5d8339815191529060200160405180910390a3833b156104ed576104ed8484846108b6565b5060019392505050565b6000546001600160a01b031633146105215760405162461bcd60e51b815260040161032190610d91565b6002546006546105319190610dde565b8111156105805760405162461bcd60e51b815260206004820181905260248201527f4e4c4c3a204d696e742065786365656473206d6178696d756d20616d6f756e746044820152606401610321565b61058a8282610920565b5050565b61059833826109ed565b50565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260040161032190610d91565b6105cf6000610b29565b565b6000546001600160a01b031633146105fb5760405162461bcd60e51b815260040161032190610d91565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b60606004805461023890610df5565b3360009081526005602052604090205460ff16151560011461065657600080fd5b61058a3383836106f9565b6000546001600160a01b0316331461068b5760405162461bcd60e51b815260040161032190610d91565b6001600160a01b0381166106f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610321565b61059881610b29565b6001600160a01b03831661075d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610321565b6001600160a01b0382166107bf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610321565b6001600160a01b038316600090815260016020526040902054818110156108375760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610321565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061086e908490610dc6565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610e5d833981519152846040516108a891815260200190565b60405180910390a350505050565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed36906108e890339087908790600401610d4e565b600060405180830381600087803b15801561090257600080fd5b505af1158015610916573d6000803e3d6000fd5b5050505050505050565b6001600160a01b0382166109765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610321565b80600260008282546109889190610dc6565b90915550506001600160a01b038216600090815260016020526040812080548392906109b5908490610dc6565b90915550506040518181526001600160a01b03831690600090600080516020610e5d8339815191529060200160405180910390a35050565b6001600160a01b038216610a4d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610321565b6001600160a01b03821660009081526001602052604090205481811015610ac15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610321565b6001600160a01b0383166000908152600160205260408120838303905560028054849290610af0908490610dde565b90915550506040518281526000906001600160a01b03851690600080516020610e5d8339815191529060200160405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b9057600080fd5b919050565b600060208284031215610ba757600080fd5b610bb082610b79565b9392505050565b60008060408385031215610bca57600080fd5b610bd383610b79565b915060208301358015158114610be857600080fd5b809150509250929050565b60008060408385031215610c0657600080fd5b610c0f83610b79565b946020939093013593505050565b600080600060608486031215610c3257600080fd5b610c3b84610b79565b925060208401359150604084013567ffffffffffffffff80821115610c5f57600080fd5b818601915086601f830112610c7357600080fd5b813581811115610c8557610c85610e46565b604051601f8201601f19908116603f01168101908382118183101715610cad57610cad610e46565b81604052828152896020848701011115610cc657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610cfa57600080fd5b5035919050565b6000815180845260005b81811015610d2757602081850181015186830182015201610d0b565b81811115610d39576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610d756060830184610d01565b95945050505050565b602081526000610bb06020830184610d01565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610dd957610dd9610e30565b500190565b600082821015610df057610df0610e30565b500390565b600181811c90821680610e0957607f821691505b60208210811415610e2a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200f0930b0189abe67b1bf267e8092f1e987a3cc53d69d58d04f62964c7f79d70a64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063945fb71711610066578063945fb717146101e857806395d89b41146101fb578063a9059cbb14610203578063f2fde38b1461021657600080fd5b8063715018a6146101a25780638da5cb5b146101aa5780639304a0ab146101c557600080fd5b80634000aea0116100c85780634000aea01461012e57806340c10f191461015157806342966c681461016657806370a082311461017957600080fd5b806306fdde03146100ef57806318160ddd1461010d578063313ce5671461011f575b600080fd5b6100f7610229565b6040516101049190610d7e565b60405180910390f35b6002545b604051908152602001610104565b60405160128152602001610104565b61014161013c366004610c1d565b6102bb565b6040519015158152602001610104565b61016461015f366004610bf3565b6104f7565b005b610164610174366004610ce8565b61058e565b610111610187366004610b95565b6001600160a01b031660009081526001602052604090205490565b61016461059b565b6000546040516001600160a01b039091168152602001610104565b6101416101d3366004610b95565b60056020526000908152604090205460ff1681565b6101646101f6366004610bb7565b6105d1565b6100f7610626565b610164610211366004610bf3565b610635565b610164610224366004610b95565b610661565b60606003805461023890610df5565b80601f016020809104026020016040519081016040528092919081815260200182805461026490610df5565b80156102b15780601f10610286576101008083540402835291602001916102b1565b820191906000526020600020905b81548152906001019060200180831161029457829003601f168201915b5050505050905090565b60003361032a5760405162461bcd60e51b815260206004820152603260248201527f4552433637373a2063616e2774207265636569766520746f6b656e732066726f6044820152716d20746865207a65726f206164647265737360701b60648201526084015b60405180910390fd5b6001600160a01b03841661038b5760405162461bcd60e51b815260206004820152602260248201527f4552433637373a2063616e27742073656e6420746f207a65726f206164647265604482015261737360f01b6064820152608401610321565b6001600160a01b0384163014156103fb5760405162461bcd60e51b815260206004820152602e60248201527f4552433637373a2063616e27742073656e6420746f6b656e7320746f2074686560448201526d20746f6b656e206164647265737360901b6064820152608401610321565b6001600160a01b03841660009081526005602052604090205460ff1615156001146104a25760405162461bcd60e51b815260206004820152604b60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420696e20746860448201527f65204461696c792c205765656b6c792c204d6f6e74686c79204e6f204c6f737360648201526a102637ba3a32b934b2b99760a91b608482015260a401610321565b6104ad3385856106f9565b6040518381526001600160a01b038516903390600080516020610e5d8339815191529060200160405180910390a3833b156104ed576104ed8484846108b6565b5060019392505050565b6000546001600160a01b031633146105215760405162461bcd60e51b815260040161032190610d91565b6002546006546105319190610dde565b8111156105805760405162461bcd60e51b815260206004820181905260248201527f4e4c4c3a204d696e742065786365656473206d6178696d756d20616d6f756e746044820152606401610321565b61058a8282610920565b5050565b61059833826109ed565b50565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260040161032190610d91565b6105cf6000610b29565b565b6000546001600160a01b031633146105fb5760405162461bcd60e51b815260040161032190610d91565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b60606004805461023890610df5565b3360009081526005602052604090205460ff16151560011461065657600080fd5b61058a3383836106f9565b6000546001600160a01b0316331461068b5760405162461bcd60e51b815260040161032190610d91565b6001600160a01b0381166106f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610321565b61059881610b29565b6001600160a01b03831661075d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610321565b6001600160a01b0382166107bf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610321565b6001600160a01b038316600090815260016020526040902054818110156108375760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610321565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061086e908490610dc6565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610e5d833981519152846040516108a891815260200190565b60405180910390a350505050565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed36906108e890339087908790600401610d4e565b600060405180830381600087803b15801561090257600080fd5b505af1158015610916573d6000803e3d6000fd5b5050505050505050565b6001600160a01b0382166109765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610321565b80600260008282546109889190610dc6565b90915550506001600160a01b038216600090815260016020526040812080548392906109b5908490610dc6565b90915550506040518181526001600160a01b03831690600090600080516020610e5d8339815191529060200160405180910390a35050565b6001600160a01b038216610a4d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610321565b6001600160a01b03821660009081526001602052604090205481811015610ac15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610321565b6001600160a01b0383166000908152600160205260408120838303905560028054849290610af0908490610dde565b90915550506040518281526000906001600160a01b03851690600080516020610e5d8339815191529060200160405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b9057600080fd5b919050565b600060208284031215610ba757600080fd5b610bb082610b79565b9392505050565b60008060408385031215610bca57600080fd5b610bd383610b79565b915060208301358015158114610be857600080fd5b809150509250929050565b60008060408385031215610c0657600080fd5b610c0f83610b79565b946020939093013593505050565b600080600060608486031215610c3257600080fd5b610c3b84610b79565b925060208401359150604084013567ffffffffffffffff80821115610c5f57600080fd5b818601915086601f830112610c7357600080fd5b813581811115610c8557610c85610e46565b604051601f8201601f19908116603f01168101908382118183101715610cad57610cad610e46565b81604052828152896020848701011115610cc657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610cfa57600080fd5b5035919050565b6000815180845260005b81811015610d2757602081850181015186830182015201610d0b565b81811115610d39576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610d756060830184610d01565b95945050505050565b602081526000610bb06020830184610d01565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610dd957610dd9610e30565b500190565b600082821015610df057610df0610e30565b500390565b600181811c90821680610e0957607f821691505b60208210811415610e2a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200f0930b0189abe67b1bf267e8092f1e987a3cc53d69d58d04f62964c7f79d70a64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden;"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "ERC677 transfer token to a contract address with additional data if the recipient is a contract.",
        "params": {
          "_data": "The extra data to be passed to the receiving contract.",
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12475,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12587,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12589,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12591,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 12593,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 11971,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "igoAndNoLossLotteries",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 11976,
        "contract": "contracts/NLLToken.sol:NLLToken",
        "label": "maxSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}